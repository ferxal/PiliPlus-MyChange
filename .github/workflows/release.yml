name: Release

on:
  push:
    tags:
      - 'v*' # 当有以 'v' 开头的标签被推送时触发

jobs:
  build_windows:
    runs-on: windows-latest # 使用 Windows 运行构建

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.7' # 根据你的项目使用的 Flutter 版本进行调整
          dart-version: '3.9.0' # 明确指定 Dart SDK 版本以匹配项目要求
          cache: true # 启用 Flutter SDK 缓存

      - name: Cache Flutter dependencies
        uses: actions/cache@v4
        with:
          path: ${{ runner.tool_cache }}/flutter/
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-flutter-

      - name: Get Flutter dependencies
        run: flutter pub get

      - name: Run tests
        run: flutter test # 添加自动化测试环节

      - name: Build Windows executable
        run: flutter build windows --release
        # 你可能需要根据你的项目配置调整输出路径
      - name: Archive Windows build
        run: |
          Compress-Archive -Path "build/windows/x64/runner/Release/*" -DestinationPath "PiliPlus-windows.zip"
        shell: pwsh
      - name: Upload Windows Release Asset
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: PiliPlus-windows.zip
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            # Release ${{ github.ref_name }}
            
            This is an automated release.
            
            ## Changes
            
            ${{ github.event.head_commit.message }} # 假设你的提交信息包含更新日志
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build_android:
    runs-on: ubuntu-latest # 使用 Ubuntu 运行构建

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.7' # 根据你的项目使用的 Flutter 版本进行调整
          cache: true # 启用 Flutter SDK 缓存

      - name: Cache Flutter dependencies
        uses: actions/cache@v4
        with:
          path: ${{ runner.tool_cache }}/flutter/
          key: ${{ runner.os }}-flutter-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: |
            ${{ runner.os }}-flutter-

      - name: Get Flutter dependencies
        run: flutter pub get

      - name: Run tests
        run: flutter test # 添加自动化测试环节

      - name: Build Android APK
        run: flutter build apk --release
      - name: Upload Android Release Asset
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: build/app/outputs/flutter-apk/app-release.apk
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            # Release ${{ github.ref_name }}
            
            This is an automated release.
            
            ## Changes
            
            ${{ github.event.head_commit.message }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}